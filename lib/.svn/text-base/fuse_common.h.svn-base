#ifndef _FUSE_COMMON_H_
#define _FUSE_COMMON_H_

#include <sys/types.h>

/**fuse various module start and destroy*/
struct fuse_module_ops
{
  int (*start)(void*);
  int (*destroy)(void*);
};

struct fuse_config
{
	int mrfd[2];//unix socket meta and req
	int msfd[2];//unix socket meta and socket
	int mdfd[2];//unix socket meta and disk;
	int rsfd[2];//unix socket request and socket
	int drfd[2];//unix socket disk and req
	int dsfd[2];//unix socket disk and socket
	uid_t uid;
	gid_t gid;
	unsigned debug;
	double timeout;
    char *tmp;//tmp cache directory
    char *user;//user
    char *pwd;//password
    char *mountpoint;//mountpoint
    int lfd;//log fd
};

struct fuse_conn ;
struct fuse_meta;
struct fuse_disk;
struct fuse_net;
struct fuse_conn_config;
struct fuse_meta_config;
struct fuse_net_config;
struct fuse_disk_config;


void fuse_read_config(const char *);
void fuse_read_conn_config(struct fuse_conn_config **);
void fuse_read_meta_config(struct fuse_meta_config **);
void fuse_read_disk_config(struct fuse_disk_config **);
void fuse_read_net_config(struct fuse_net_config **);
void parse(const char *filename);
const char* get_mountpoint();

int fuse_set_signal_handlers(struct fuse_conn*,struct fuse_meta*,\
			struct fuse_disk*,struct fuse_net*);
void fuse_exit();


#endif
